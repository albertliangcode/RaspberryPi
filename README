Raspberry Pi projects
Dung Le, 2012
---------------------------------------
references:
	- https://github.com/dwelch67/raspberrypi	
	- bootloader for serial debug https://github.com/jamieiles/rpi-gdb

notes:
	- to build, type make. There are makefiles for both C and Asm frameworks	
	- to debug, use "make db". This starts remote gdb (serial) section using the
	  gdbscript. Then "load <binary>" to upload. The debug framework requires: 	  
		  + Linux machines with ARM toolchain (arm-elf is being used) + gdb-multiarch		  
		  + serial connection to ARM target via uart (3 wires tx,rx and gnd)		  
		  + bootloader preloaded in the target board. see "rpi-gdb"
		  + A reset button is nice to have (solder on P6 pins, near HDMI port)
	
1. rpi-gdb: bootloader for serial debug
	- to use, just copy content of bootloader folder to SD card
	
2. blink: blink the status LED on board. 
	This example project uses custom makefiles for two different frameworks	
	- C : "c_Makefile". codes include all related C files, linker script
	  (memmap) and startup code (vector.s)	  
	- Assembly: "makefile". code includes main.s amd linker script (memmap)

3. I2C driver in polling mode (Master) 

4. ocd_jtag: bootloader for jtag debugging; config files for ARM-USB-OCD and 
   is raspberrypi pi are included
   
5. Timerblink and timer_interrupt are under tested. The debug tools (serial and
   jtag) have issues with the current bootloader ( does not reponse after 
   a breakpoint at interuppt). This could caused by the interrupt vectors not 
   set up properly
